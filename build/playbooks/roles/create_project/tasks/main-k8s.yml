---

- name: Create test project | check if already exists
  shell: "oc get projects"
  register: proj_exists

- name: Create test project | delete if exists
  shell: "oc delete project {{testproject}}" 
  when: "'{{testproject}}' in proj_exists.stdout"
  register: deleteproj

- name: pause for 20 seconds
  pause:
    seconds: 20 
  when: deleteproj.changed == true

- name: create sanitytest project
  k8s:
    state: present
    src: roles/create_project/files/project.yaml

- name: deploy application | prepare nginx deployment
  k8s:
    state: present
    src: roles/create_project/files/deployment.yaml
  when: storageclass is not defined

- name: deploy application | prepare nginx yaml
  k8s:
    state: present
    src: roles/create_project/files/deployment.yaml
  when: storageclass is defined

- name: deploy application | prepare nginx pvc yaml
  k8s:
    state: present
    src: roles/create_project/files/nginxpvc.yaml
  when: storageclass is defined

- name: deploy application | prepare route yaml
  k8s:
    state: present
    src: roles/create_project/files/nginxroute.yaml

- name: deploy application | prepare service yaml
  k8s:
    state: present
    src: roles/create_project/files/nginxsvc.yaml

- name: check | pods are up
  shell: "oc get pods -n {{testproject}} |grep -i nginx|grep -i Running"
  register: oc_get_pods
  until: "'Running' in oc_get_pods.stdout and 'deploy' not in oc_get_pods.stdout"
  retries: 60
  delay: 2

- name: pause for 1 minute
  pause:
    minutes: 1

- name: check | app answers via router
  uri:
    url: http://nginx-{{testproject}}.{{ocpappsdomain}}
    status_code: 200
    return_content: yes
  when: storageclass is not defined

- name: check | app answers via router
  uri:
    url: http://nginx-{{testproject}}.{{ocpappsdomain}}
    status_code: 403
    return_content: yes
  when: storageclass is defined

- name: delete project
  k8s:
    state: absent
    api_version: v1
    kind: Namespace
    namespace: sanitytest
    name: sanitytest
